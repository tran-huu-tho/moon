@model List<moon.Models.CartItem>

@{
  Layout = "~/Views/Shared/Layout.cshtml";
  ViewData["Title"] = "Thanh toán";
}

<div class="bg-light py-3">
  <div class="container">
    <div class="row">
      <div class="col-md-12 mb-0">
        <a asp-controller="Home" asp-action="Index">Trang chủ</a>
        <span class="mx-2">/</span>
        <strong class="text-black">Thanh toán</strong>
      </div>
    </div>
  </div>
</div>

<form asp-action="PlaceOrder" asp-controller="Checkout" method="post">
  <div class="site-section">
    <div class="container">
      <div class="row">
        <!-- Cột trái: Thông tin người nhận -->
        <div class="col-md-7">
          <h2 class="h4 text-black mb-3">Thông tin giao hàng</h2>
          <div class="p-3 p-lg-4 border rounded">
            <div class="form-group">
              <label for="full_name">Họ và tên <span class="text-danger">*</span></label>
              <input type="text" class="form-control" id="full_name" name="FullName" placeholder="Nguyễn Văn A">
            </div>
            <div class="form-group">
              <label for="phone">Số điện thoại <span class="text-danger">*</span></label>
              <input type="text" class="form-control" id="phone" name="PhoneNumber" placeholder="09xxxxxxxx">
            </div>

            <!-- ComboBox Địa chỉ -->
            <div class="form-group">
              <label for="province">Tỉnh/Thành phố <span class="text-danger">*</span></label>
              <select class="form-control" id="province" name="Province">
                <option>-- Chọn Tỉnh/Thành phố --</option>
              </select>
            </div>

            <div class="form-group">
              <label for="district">Quận/Huyện <span class="text-danger">*</span></label>
              <select class="form-control" id="district" name="District" disabled>
                <option>-- Chọn Quận/Huyện --</option>
              </select>
            </div>

            <div class="form-group">
              <label for="ward">Phường/Xã <span class="text-danger">*</span></label>
              <select class="form-control" id="ward" name="Ward" disabled>
                <option>-- Chọn Phường/Xã --</option>
              </select>
            </div>

            <div class="form-group">
              <label for="note">Ghi chú đơn hàng</label>
              <textarea id="note" class="form-control" rows="3" name="Note"
                placeholder="Ví dụ: Giao giờ hành chính, không gọi điện trước..."></textarea>
            </div>
          </div>

          <div class="mt-4 p-3 border rounded">
            <h4 class="h5">Phương thức thanh toán</h4>
            <div class="form-check">
              <input class="form-check-input" type="radio" name="PaymentMethod" id="cod" value="COD" checked>
              <label class="form-check-label" for="cod">Thanh toán khi nhận hàng (COD)</label>
            </div>
          </div>
        </div>

        <!-- Cột phải: Tóm tắt đơn hàng -->
        <div class="col-md-5">
          <div class="p-3 p-lg-4 border rounded bg-light">
            <h2 class="h4 text-black mb-3">Đơn hàng của bạn</h2>
            <table class="table">
              <thead>
                <tr>
                  <th>Sản phẩm</th>
                  <th class="text-right">Tạm tính</th>
                </tr>
              </thead>
              <tbody>
                @foreach (var item in Model)
                {
                  <tr>
                    <td>@($"{item.ProductName} x{item.Quantity}")</td>
                    <td class="text-right">@item.Total.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))</td>
                  </tr>
                }
                <tr>
                  <td class="font-weight-bold">Tạm tính</td>
                  <td class="text-right">
                    @Model.Sum(item => item.Total).ToString("C0", new System.Globalization.CultureInfo("vi-VN"))
                  </td>
                </tr>
                <tr>
                  <td class="font-weight-bold">Phí vận chuyển</td>
                  <td class="text-right">30.000₫</td>
                </tr>
                <tr>
                  <td class="font-weight-bold">Tổng cộng</td>
                  <td class="text-right text-danger font-weight-bold">
                    @{
                      var tong = Model.Sum(item => item.Total) + 30000;
                      @tong.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))
                    }
                  </td>
                </tr>
              </tbody>
            </table>

            <button type="submit" class="btn btn-danger btn-lg btn-block mt-3">Đặt hàng</button>
          </div>
        </div>
      </div>
    </div>
  </div>
</form>

<!-- JavaScript load địa chỉ (1 request duy nhất) -->
@section Scripts {
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const provinceSelect = document.getElementById("province");
      const districtSelect = document.getElementById("district");
      const wardSelect = document.getElementById("ward");

      let allData = []; // lưu toàn bộ dữ liệu

      // Gọi API lấy tất cả dữ liệu depth=3
      fetch("https://provinces.open-api.vn/api/?depth=3")
        .then(res => res.json())
        .then(data => {
          allData = data;
          // Load danh sách tỉnh
          allData.forEach(p => {
            const opt = new Option(p.name, p.code);
            provinceSelect.appendChild(opt);
          });
        })
        .catch(err => {
          console.error("Lỗi tải dữ liệu địa phương:", err);
          Swal.fire("Lỗi", "Không thể tải dữ liệu địa phương. Vui lòng thử lại.", "error");
        });

      // Khi chọn tỉnh
      provinceSelect.addEventListener("change", function () {
        const provinceCode = Number(this.value);
        districtSelect.innerHTML = '<option value="">-- Chọn Quận/Huyện --</option>';
        wardSelect.innerHTML = '<option value="">-- Chọn Phường/Xã --</option>';
        districtSelect.disabled = true;
        wardSelect.disabled = true;

        if (provinceCode > 0) {
          const province = allData.find(p => p.code === provinceCode);
          if (province && Array.isArray(province.districts)) {
            province.districts.forEach(d => {
              const opt = new Option(d.name, d.code);
              districtSelect.appendChild(opt);
            });
            districtSelect.disabled = false;
          }
        }
      });

      // Khi chọn huyện
      districtSelect.addEventListener("change", function () {
        const districtCode = Number(this.value);
        wardSelect.innerHTML = '<option value="">-- Chọn Phường/Xã --</option>';
        wardSelect.disabled = true;

        if (districtCode > 0) {
          const provinceCode = Number(provinceSelect.value);
          const province = allData.find(p => p.code === provinceCode);
          if (province) {
            const district = province.districts.find(d => d.code === districtCode);
            if (district && Array.isArray(district.wards)) {
              district.wards.forEach(w => {
                const opt = new Option(w.name, w.code);
                wardSelect.appendChild(opt);
              });
              wardSelect.disabled = false;
            }
          }
        }
      });
    });
  </script>
}
