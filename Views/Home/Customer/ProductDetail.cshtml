@model moon.Models.Product

@{
    Layout = "~/Views/Shared/Layout.cshtml";
    ViewData["Title"] = "Chi tiết sản phẩm";
    var imageUrl = Model.ImageUrls?.FirstOrDefault() ?? "/images/default.png";
    var errorMessage = TempData["Error"] != null ? System.Text.Json.JsonSerializer.Serialize(TempData["Error"]) : "null";
    var successMessage = TempData["Success"] != null ? System.Text.Json.JsonSerializer.Serialize(TempData["Success"]) : "null";
}

<style>
    .btn-outline-primary.btn-decrease,
    .btn-outline-primary.btn-increase {
        border-color: #ccc !important;
        color: #007bff;
    }

    .btn-outline-primary.btn-decrease:hover,
    .btn-outline-primary.btn-increase:hover {
        background-color: #e6e6e6;
        border-color: #bbb !important;
    }
</style>

<div class="bg-light py-3">
    <div class="container">
        <div class="row">
            <div class="col-md-12 mb-0">
                <a asp-controller="Home" asp-action="Index">Trang chủ</a>
                <span class="mx-2 mb-0">/</span>
                <a asp-controller="Home" asp-action="Customer">Cửa hàng</a>
                <span class="mx-2 mb-0">/</span>
                <strong class="text-black">@Model.Name</strong>
            </div>
        </div>
    </div>
</div>

<div class="site-section">
    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <div class="item-entry">
                    <a href="#" class="product-item md-height bg-gray d-block">
                        <img src="@imageUrl" alt="@Model.Name" class="img-fluid">
                    </a>
                </div>
            </div>
            <div class="col-md-6">
                <h2 class="text-black">@Model.Name</h2>
                <p class="mb-4">@Model.Description</p>
                <p>
                    <strong class="text-primary h4">
                        @Model.Price.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))
                    </strong>
                </p>

                <form asp-controller="Cart" asp-action="AddToCart" method="get">
                    <input type="hidden" name="id" value="@Model.Id" />
                    <input type="hidden" name="returnUrl" value="@Context.Request.Path" />
                    <div class="mb-4">
                        <div class="d-flex justify-content-start align-items-center mb-2">
                            <div class="input-group" style="max-width: 120px;">
                                <div class="input-group-prepend">
                                    <button class="btn btn-outline-primary btn-decrease" type="button" @(Model.StockQuantity == 0 ? "disabled" : "")>&minus;</button>
                                </div>
                                <input type="text" class="form-control text-center"
                                       name="quantity"
                                       value="@(Model.StockQuantity == 0 ? 0 : 1)"
                                       id="quantityInput"
                                       @(Model.StockQuantity == 0 ? "readonly" : "") />
                                <div class="input-group-append">
                                    <button class="btn btn-outline-primary btn-increase" type="button" @(Model.StockQuantity == 0 ? "disabled" : "")>&plus;</button>
                                </div>
                            </div>
                            <span class="text-muted" style="margin-left: 15px;">
                                @(Model.StockQuantity == 0 ? "Hết hàng" : $"{Model.StockQuantity} sản phẩm có sẵn")
                            </span>
                        </div>
                    </div>

                    <div class="d-flex">
                        <button type="submit" class="btn btn-sm height-auto px-4 py-3 btn-outline-primary"
                                @(Model.StockQuantity == 0 ? "disabled" : "")>
                            Thêm vào giỏ
                        </button>

                        <a asp-controller="Order" asp-action="BuyNow" asp-route-id="@Model.Id"
                           class="btn btn-sm height-auto px-4 py-3 btn-danger"
                           style="margin-left: 15px;">
                            MUA NGAY
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const errorMessage = @Html.Raw(errorMessage);
            const successMessage = @Html.Raw(successMessage);

            if (errorMessage && errorMessage !== "null") {
                Swal.fire({
                    icon: 'error',
                    title: 'Lỗi',
                    text: errorMessage,
                    confirmButtonColor: '#e74c3c'
                });
            } else if (successMessage && successMessage !== "null") {
                Swal.fire({
                    icon: 'success',
                    title: 'Thành công',
                    text: successMessage,
                    confirmButtonColor: '#28a745'
                });
            }

            const quantityInput = document.getElementById("quantityInput");
            const btnMinus = document.querySelector(".btn-decrease");
            const btnPlus = document.querySelector(".btn-increase");
            const maxQuantity = @Model.StockQuantity;

            btnMinus?.addEventListener("click", function () {
                let currentValue = parseInt(quantityInput.value) || 1;
                if (currentValue > 1) {
                    quantityInput.value = currentValue - 1;
                }
            });

            btnPlus?.addEventListener("click", function () {
                let currentValue = parseInt(quantityInput.value) || 1;
                if (currentValue < maxQuantity) {
                    quantityInput.value = currentValue + 1;
                }
            });

            quantityInput?.addEventListener("input", function () {
                let value = parseInt(this.value.replace(/\D/g, ""));
                if (isNaN(value) || value < 1) {
                    this.value = 1;
                } else if (value > maxQuantity) {
                    this.value = maxQuantity;
                } else {
                    this.value = value;
                }
            });
        });
    </script>
}
